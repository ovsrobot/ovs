# OVS_DPDK_PRE_CHECK()
#
# Check prerequisites for DPDK tests. Following settings are checked:
#  - Hugepages
#
m4_define([OVS_DPDK_PRE_CHECK],
  [dnl Check Hugepages
   AT_CHECK([cat /proc/meminfo], [], [stdout])
   AT_SKIP_IF([egrep 'HugePages_Free: *0' stdout], [], [stdout])
   AT_CHECK([mount], [], [stdout])
   AT_CHECK([grep 'hugetlbfs' stdout], [], [stdout], [])

])


# OVS_DPDK_PRE_PHY_SKIP()
#
# Skip any phy related tests if the PHY variable is not set.
# This is done by checking for a bound driver.
#
m4_define([OVS_DPDK_PRE_PHY_SKIP],
  [dnl Perform the precheck
   OVS_DPDK_PRE_CHECK()

   dnl Check if VFIO or UIO driver is loaded
   AT_SKIP_IF([ ! (lsmod | grep -E "igb_uio|vfio") ], [], [stdout])

   dnl Find PCI address candidate, skip if there is no DPDK-compatible NIC
   AT_CHECK([$DPDK_DIR/usertools/dpdk-devbind.py -s | head -n +4 | tail -1], [], [stdout])
   AT_CHECK([cat stdout | cut -d" " -s -f1 > PCI_ADDR])
   AT_SKIP_IF([ ! test -s PCI_ADDR ])

])


# OVS_DPDK_START()
#
# Create an empty database and start ovsdb-server. Add special configuration
# dpdk-init to enable DPDK functionality. Start ovs-vswitchd connected to that
# database using system devices (no dummies).
#
m4_define([OVS_DPDK_START],
  [dnl Create database.
   AT_CHECK([touch .conf.db.~lock~])
   AT_CHECK([ovsdb-tool create conf.db $abs_top_srcdir/vswitchd/vswitch.ovsschema])

   dnl Start ovsdb-server.
   AT_CHECK([ovsdb-server --detach --no-chdir --pidfile --log-file --remote=punix:$OVS_RUNDIR/db.sock], [0], [stdout], [stderr])
   on_exit "kill `cat ovsdb-server.pid`"
   AT_CHECK([[sed < stderr '
/vlog|INFO|opened log file/d
/ovsdb_server|INFO|ovsdb-server (Open vSwitch)/d']])
   AT_CAPTURE_FILE([ovsdb-server.log])

   dnl Initialize database.
   AT_CHECK([ovs-vsctl --no-wait init])

   dnl Enable DPDK functionality
   AT_CHECK([ovs-vsctl --no-wait set Open_vSwitch . other_config:dpdk-init=true])

   dnl Start ovs-vswitchd.
   AT_CHECK([ovs-vswitchd --detach --no-chdir --pidfile --log-file -vvconn -vofproto_dpif -vunixctl], [0], [stdout], [stderr])
   AT_CAPTURE_FILE([ovs-vswitchd.log])
   on_exit "kill_ovs_vswitchd `cat ovs-vswitchd.pid`"
])


# NEGOTIATION_TEST_TSO([testpmd], [ovs])
#
# Test whether TSO is being enabled for OVS and TestPMD. The arguments denote whether
# TSO is enabled for testpmd and ovs or not, respectively.
#
m4_define([NEGOTIATION_TEST_TSO],
  [
   OVS_DPDK_START()
   AS_IF([test $1 -eq 1], [AT_CHECK([ovs-vsctl --no-wait set Open_vSwitch . other_config:userspace-tso-enable=true])], [AT_CHECK([ovs-vsctl --no-wait set Open_vSwitch . other_config:userspace-tso-enable=false])])
   AS_IF([test $1 -eq 1], [OVS_WAIT_UNTIL([grep 'Userspace TCP Segmentation Offloading support enabled' ovs-vswitchd.log])], [])
   AT_CHECK([ovs-vsctl add-br br10 -- set bridge br10 datapath_type=netdev])
   AT_CHECK([ovs-vsctl add-port br10 dpdkvhostuserclient0 -- set Interface dpdkvhostuserclient0 type=dpdkvhostuserclient options:vhost-server-path=$OVS_RUNDIR/dpdkvhostclient0], [], [stdout], [stderr])
   AT_CHECK([ovs-vsctl show], [], [stdout])
   on_exit "pkill -f -x -9 'tail -f /dev/null'"
   AT_CHECK([echo "show device info all" > CMDFILE])
   AT_CHECK([echo "stop" >> CMDFILE])
   AT_CHECK([echo "port stop 0" >> CMDFILE])
   AS_IF([test $2 -eq 1], [AT_CHECK([echo "tso set 1500 0" >> CMDFILE], [])], [])
   AS_IF([test $2 -eq 1], [AT_CHECK([echo "csum set tcp hw 0" >> CMDFILE], [])], [])
   AT_CHECK([echo "port start 0" >> CMDFILE])
   AT_CHECK([echo "start" >> CMDFILE])
   AT_CHECK([echo "show port 0 tx_offload capabilities" >> CMDFILE])
   AT_CHECK([echo "show port 0 tx_offload configuration" >> CMDFILE])
   AT_CHECK([lscpu], [], [stdout])
   AT_CHECK([cat stdout | grep "NUMA node(s)" | awk '{c=1; while (c++<$(3)) {printf "512,"}; print "512"}' > NUMA_NODE])
   tail -f /dev/null | dpdk-testpmd --socket-mem="$(cat NUMA_NODE)" --no-pci\
   --vdev="net_virtio_user,path=$OVS_RUNDIR/dpdkvhostclient0,server=1" \
   --vdev="net_tap0,iface=tap0" --file-prefix page0 \
   --single-file-segments -- --cmdline-file=CMDFILE \
   -a >$OVS_RUNDIR/testpmd-dpdkvhostuserclient0.log 2>&1 &

   sleep 10
   pkill -f -x -9 'tail -f /dev/null'

   sleep 1
   AT_CHECK([awk '/negotiated Virtio features/ {a=$NF} END{print a}' ovs-vswitchd.log],[],[stdout])

   AS_IF([test $1 -eq 1 && test $2 -eq 1], [AT_CHECK([printf "%X" $(( $(cat stdout) & ((1<<0)|(1<<11)|(1<<12)) ))],[],[1801])], [AT_CHECK([printf "%X" $(( $(cat stdout) & ((1<<0)|(1<<11)|(1<<12)) ))],[],[0])])
   AS_IF([test $2 -eq 1], [AT_CHECK([grep "Port : TCP_CKSUM TCP_TSO" $OVS_RUNDIR/testpmd-dpdkvhostuserclient0.log], [0], [stdout], [stderr])], [])
   AT_CHECK([ovs-vsctl del-port br10 dpdkvhostuserclient0], [], [stdout], [stderr])
   ])
